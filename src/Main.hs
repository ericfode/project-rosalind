-- A complete discussion of this template can be found at
-- https://www.fpcomplete.com/school/randoms

module Main where

data Nukes = Nukes Int Int Int Int deriving(Show)

lettertonumber :: Char -> Nukes -> Nukes
lettertonumber 'A' (Nukes a g c t) = Nukes (a + 1) g c t
lettertonumber 'C' (Nukes a g c t) = Nukes a (g + 1) c t
lettertonumber 'G' (Nukes a g c t) = Nukes a g (c + 1) t
lettertonumber 'T' (Nukes a g c t) = Nukes a g c (t + 1)


counttiddy :: String -> Nukes
counttiddy = foldr lettertonumber (Nukes 0 0 0 0 )

-- Take the string and for each item increment for matching letter

main = print $ counttiddy "ATGTCATAAATACCGCGGCTAGAGAGCTGTTGGTACTGGTGTTGAGAGAAGCAAATAGGCGCATACGATCATAATAGCTTTATCTTAATCAAAGACGGCCCCGTCAGGAGCTTGGCAAATTCTTGACAAATCGCTGCCCAATTGCTAGGCTTGTGGTATATCAGGAAGATTAGGGCTTTCCTTGCTAGCCGCGGTCCTCGCGGCCGCCGGTCCCAATAACGACCCTGGGAACTCGCTCAAGTTACAGATAGGCGGCCACGATGCATGCTCACCGGGCAGAGCAGATTATTCATTGTTGGGTGTGACCAACAGGCCGTTCGAGTACACTCGTTGCGGGAGGACTCACACAGCCCGTATACTTTCTTACGAGACCAGGTTGCAGGATATCTCTTTCCGCCAACCGAGGCTCCGCACATTTATCCGTTGAGGAATCACAACTCCATGGCCTCGGTAACGTCTCTCACCGCCTTCGGCTTGGTGCTTTCATAATTCCGGATAGTGCCCCTAGATCGCATTGCCGGTGTCTCGTTTCCCTATCGGCCAAATTTTATCCCAATCAATCCGTCGCCCCTATACTCGAGATATATTGTATTCATCTTCGGTACCGGAAATCGGATGGGAGCGAAGATGAACAGCCGAGTGGTCACGTATAGAGTGCCGCCGCATTCTGGACTGAATGAAAGGGCTCACTACCACTAACACACCGTTCGCGAAATCACAGTCCCTTAGTTCCGACGAGAACCGTATGGACCCCGATGATTGTCGTAGTTCGTTAGTGATACCTGATCCAGGCGTTCTTAGGTCAGCCGCAGCTGTAAACTAACGGGGTGCTC"